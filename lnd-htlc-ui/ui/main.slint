import { Button, LineEdit, ScrollView, VerticalBox } from "std-widgets.slint";

struct Invoice {
    bolt11: string,
    hash: string,
    preimage: string,
    amount: int,
    memo: string,
    state: string,
}

component InvoiceItem inherits Rectangle {
    in property <Invoice> invoice;
    in property <bool> is-settled;
    callback settle-clicked();

    VerticalBox {
        Text {
            text: "BOLT11: " + invoice.bolt11;
            wrap: word-wrap;
        }
        Text { text: "Hash: " + invoice.hash; }
        Text { text: "Amount: " + invoice.amount + " sats"; }
        Text { text: "Memo: " + invoice.memo; }
        Text { text: "State: " + invoice.state; }
        if (!is-settled && invoice.state == "ACCEPTED"): Button {
            text: "Settle with Preimage";
            clicked => { settle-clicked(); }
        }
    }
}

export component MainWindow inherits Window {
    title: "LND HTLC Manager";
    min-width: 600px;
    min-height: 400px;

    callback create-invoice(string, string, string); // preimage, amount, memo
    callback check-invoice(string); // hash
    callback settle-invoice(string, string); // hash, preimage
    
    in property <[Invoice]> invoices: [];
    in property <string> status-message;

    VerticalBox {
        padding: 10px;

        // Create Invoice Section
        Rectangle {
            border-radius: 4px;
            border-width: 1px;
            border-color: #ccc;
            background: #f5f5f5;
            VerticalBox {
                padding: 10px;
                Text {
                    text: "Create Custom Invoice";
                    font-size: 16px;
                    font-weight: 700;
                }
                VerticalBox {
                    spacing: 10px;
                    HorizontalLayout {
                        spacing: 10px;
                        Text { text: "Preimage:"; }
                        preimage := LineEdit { placeholder-text: "Enter preimage (hex)"; }
                    }
                    HorizontalLayout {
                        spacing: 10px;
                        Text { text: "Amount (sats):"; }
                        amount := LineEdit { 
                            placeholder-text: "1000";
                            input-type: number;
                        }
                    }
                    HorizontalLayout {
                        spacing: 10px;
                        Text { text: "Memo:"; }
                        memo := LineEdit { placeholder-text: "Enter memo"; }
                    }
                    Button {
                        text: "Create Invoice";
                        clicked => {
                            root.create-invoice(preimage.text, amount.text, memo.text);
                        }
                    }
                }
            }
        }

        // Status Message
        if status-message != "": Rectangle {
            background: #ff000022;
            Text {
                text: status-message;
                color: #aa0000;
            }
        }

        // Invoices List
        Rectangle {
            border-radius: 4px;
            border-width: 1px;
            border-color: #ccc;
            background: #f5f5f5;
            vertical-stretch: 1;

            VerticalBox {
                padding: 10px;
                Text {
                    text: "Invoices";
                    font-size: 16px;
                    font-weight: 700;
                }
                ScrollView {
                    VerticalBox {
                        spacing: 10px;
                        for invoice in invoices: InvoiceItem {
                            invoice: invoice;
                            is-settled: invoice.state == "SETTLED";
                            settle-clicked => {
                                root.settle-invoice(invoice.hash, invoice.preimage);
                            }
                        }
                    }
                }
            }
        }
    }
} 